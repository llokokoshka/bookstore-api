import { MigrationInterface, QueryRunner } from 'typeorm';

export class AddAllTables1730898556614 implements MigrationInterface {
  name = 'AddAllTables1730898556614';

  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(`
            CREATE TABLE "rate" (
                "id" SERIAL NOT NULL,
                "userId" integer,
                "bookId" integer,
                CONSTRAINT "PK_2618d0d38af322d152ccc328f33" PRIMARY KEY ("id")
            )
        `);
    await queryRunner.query(`
            CREATE TABLE "author" (
                "id" SERIAL NOT NULL,
                "text" character varying NOT NULL,
                CONSTRAINT "PK_5a0e79799d372fe56f2f3fa6871" PRIMARY KEY ("id")
            )
        `);
    await queryRunner.query(`
            CREATE TABLE "genre" (
                "id" SERIAL NOT NULL,
                "name" character varying NOT NULL,
                CONSTRAINT "PK_0285d4f1655d080cfcf7d1ab141" PRIMARY KEY ("id")
            )
        `);
    await queryRunner.query(`
            CREATE TABLE "book_genre" (
                "id" SERIAL NOT NULL,
                "bookId" integer,
                "genreId" integer,
                CONSTRAINT "PK_f316eed809f6f7617821012ad05" PRIMARY KEY ("id")
            )
        `);
    await queryRunner.query(`
            CREATE TABLE "book" (
                "id" SERIAL NOT NULL,
                "name" character varying NOT NULL,
                "img" character varying NOT NULL,
                "quantity" integer NOT NULL,
                "authorId" integer,
                CONSTRAINT "PK_a3afef72ec8f80e6e5c310b28a4" PRIMARY KEY ("id")
            )
        `);
    await queryRunner.query(`
            CREATE TABLE "comments" (
                "id" SERIAL NOT NULL,
                "text" character varying NOT NULL,
                "userId" integer,
                "bookId" integer,
                CONSTRAINT "PK_8bf68bc960f2b69e818bdb90dcb" PRIMARY KEY ("id")
            )
        `);
    await queryRunner.query(`
            ALTER TABLE "user"
            ALTER COLUMN "avatar"
            SET NOT NULL
        `);
    await queryRunner.query(`
            ALTER TABLE "rate"
            ADD CONSTRAINT "FK_7440b44c5acbec8b2ebfc3af7d2" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
        `);
    await queryRunner.query(`
            ALTER TABLE "rate"
            ADD CONSTRAINT "FK_dc0ed8cca45796530b3654fc4cd" FOREIGN KEY ("bookId") REFERENCES "book"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
        `);
    await queryRunner.query(`
            ALTER TABLE "book_genre"
            ADD CONSTRAINT "FK_d3446a42df5e6f8158a5bd10f1a" FOREIGN KEY ("bookId") REFERENCES "book"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
        `);
    await queryRunner.query(`
            ALTER TABLE "book_genre"
            ADD CONSTRAINT "FK_564b744154ba1b5bc35e851f8bc" FOREIGN KEY ("genreId") REFERENCES "genre"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
        `);
    await queryRunner.query(`
            ALTER TABLE "book"
            ADD CONSTRAINT "FK_66a4f0f47943a0d99c16ecf90b2" FOREIGN KEY ("authorId") REFERENCES "author"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
        `);
    await queryRunner.query(`
            ALTER TABLE "comments"
            ADD CONSTRAINT "FK_7e8d7c49f218ebb14314fdb3749" FOREIGN KEY ("userId") REFERENCES "user"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
        `);
    await queryRunner.query(`
            ALTER TABLE "comments"
            ADD CONSTRAINT "FK_fe496134857bf079aa6b55d68df" FOREIGN KEY ("bookId") REFERENCES "book"("id") ON DELETE NO ACTION ON UPDATE NO ACTION
        `);
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(`
            ALTER TABLE "comments" DROP CONSTRAINT "FK_fe496134857bf079aa6b55d68df"
        `);
    await queryRunner.query(`
            ALTER TABLE "comments" DROP CONSTRAINT "FK_7e8d7c49f218ebb14314fdb3749"
        `);
    await queryRunner.query(`
            ALTER TABLE "book" DROP CONSTRAINT "FK_66a4f0f47943a0d99c16ecf90b2"
        `);
    await queryRunner.query(`
            ALTER TABLE "book_genre" DROP CONSTRAINT "FK_564b744154ba1b5bc35e851f8bc"
        `);
    await queryRunner.query(`
            ALTER TABLE "book_genre" DROP CONSTRAINT "FK_d3446a42df5e6f8158a5bd10f1a"
        `);
    await queryRunner.query(`
            ALTER TABLE "rate" DROP CONSTRAINT "FK_dc0ed8cca45796530b3654fc4cd"
        `);
    await queryRunner.query(`
            ALTER TABLE "rate" DROP CONSTRAINT "FK_7440b44c5acbec8b2ebfc3af7d2"
        `);
    await queryRunner.query(`
            ALTER TABLE "user"
            ALTER COLUMN "avatar" DROP NOT NULL
        `);
    await queryRunner.query(`
            DROP TABLE "comments"
        `);
    await queryRunner.query(`
            DROP TABLE "book"
        `);
    await queryRunner.query(`
            DROP TABLE "book_genre"
        `);
    await queryRunner.query(`
            DROP TABLE "genre"
        `);
    await queryRunner.query(`
            DROP TABLE "author"
        `);
    await queryRunner.query(`
            DROP TABLE "rate"
        `);
  }
}
